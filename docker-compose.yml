version: '3.0'

volumes:
  postgres-data:
  redis_conf:
  redis_data:

services:
  pgdb:
    image: postgres:13
    env_file: .env
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    restart: always
  django:
    build: .
    command: python manage.py runserver 0.0.0.0:8890
    volumes:
      - .:/usr/src/hh_ru_django
    ports:
      - "8890:8890"
    env_file: .env
    depends_on:
      - pgdb
      - redis
      - celery
    restart: always
  celery:
    build: 
      context: .
      dockerfile: Dockerfile
    command: celery -A hh_ru_django worker --beat --broker=redis://redis:6379/0 --concurrency=2
    volumes:
      - .:/usr/src/hh_ru_django
    env_file: .env
    restart: always
  flower: # нужен для отслеживания задач celery при помощи графического интерфейса
    build: .
    command: flower -A hh_ru_django --beat --port=5555 --broker=redis://redis:6379/0
    ports:
      - 5555:5555
    env_file: .env
    depends_on:
      - django
    restart: always
  redis: # Брокер для Celery
    image: "redis:alpine"
    volumes:
      - redis_conf:/etc/redis/
      - redis_data:/data/
  chrome:
    image: selenium/standalone-chrome:latest
    hostname: chrome
    ports:
      - "5900:5900"
      - "4444:4444"
    privileged: true
    restart: always
    shm_size: 2g
    env_file: .env
